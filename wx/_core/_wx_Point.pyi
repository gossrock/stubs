from typing import overload, Tuple, Any

class Point:
    x: int
    y: int
    @overload
    def __init__ (self) -> None: ...
    @overload
    def __init__(self, x: int, y: int) -> None: ...
    @overload
    def __init__(self, pt: Point) -> None: ...
    def  Get(self) -> Tuple[int, int]: ...
    #def GetIM(self) -> : ... # returns something like namedtuple ...
    def IsFullySpecified(self) -> bool: ...
    def SetDefaults(self, pt: Point) -> None: ...
    def  __eq__(self, other: object) -> bool: ...
    def  __getitem__(self, idx: int) -> int: ...
    def  __len__(self) -> int: ...
    def  __ne__(self, other: object) -> bool: ...
    def  __nonzero__(self) -> bool: ...
    def  __reduce__(self) -> Any: ...

    def __iter__(self) -> Point: ...
    def __next__(self) -> int: ...

DefaultPosition: Point
