from ._wx_EvtHandler import EvtHandler
from ._wx_EventFilter import EventFilter
from ._wx_Event import Event
from ._wx_EventLoopBase import EventLoopBase
from ._wx_AppTraits import AppTraits
from ._wx_Object import Object

class AppConsole(EvtHandler, EventFilter):
    AppDisplayName: str
    AppName: str
    ClassName: str
    Traits: AppTraits
    VendorDisplayName: str
    VendorName: str

    def DeletePendingEvents(self) -> None: ...
    def ExitMainLoop(self) -> None: ...
    def FilterEvent(self, event: Event) -> int: ...
    def GetAppDisplayName(self) -> str: ...
    def GetAppName(self) -> str: ...
    def GetClassName(self) -> str: ...
    @staticmethod
    def GetInstance() -> AppConsole: ...
    def GetMainLoop(self) -> EventLoopBase: ...
    def GetTraits(self) -> AppTraits: ...
    def GetVendorName(self) -> str: ...
    def HasPendingEvents(self) -> bool: ...
    @staticmethod
    def IsMainLoopRunning() -> bool: ...
    def IsScheduledForDestruction(self, object: Object) -> bool: ...
    def MainLoop(self) -> int: ... #returns 0 under X, and the wParam of the WM_QUIT message under Windows.
    def OnEventLoopEnter(self, loop: EventLoopBase) -> None: ...
    def OnEventLoopExit(self, loop: EventLoopBase) -> None: ...
    def OnExit(self) -> int: ...
    def OnInit(self) -> bool: ...
    def OnRun(self) -> int: ...
    def ProcessPendingEvents(self) -> None: ...
    def ResumeProcessingOfPendingEvents(self) -> None: ...
    def ScheduleForDestruction(self, object: Object) -> None: ...
    def SetAppDisplayName(self, name: str) -> None: ...
    def SetAppName(self, name: str) -> None: ...
    def SetCLocale(self) -> None: ...
    def SetClassName(self, name: str) -> None: ...
    @staticmethod
    def SetInstance(app: AppConsole) -> None: ...
    def SetVendorDisplayName(self, name: str) -> None: ...
    def SetVendorName(self, name: str) -> None: ...
    def SuspendProcessingOfPendingEvents(self) -> None: ...
    def Yield(self, onlyIfNeeded: bool = False) -> bool: ...
